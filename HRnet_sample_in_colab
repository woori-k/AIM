# -*- coding: utf-8 -*-
"""HRNet_foul6_thigh

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PKXW_Mmr5h9-8JFG-UGX9oQpQgwE8aOn

# HRNet 이용 스켈레톤 추출(AIM 데이터)

### 노트북 환경 조성
"""

import sys
IN_COLAB = 'google.colab' in sys.modules
print(IN_COLAB)

if IN_COLAB:
    from google.colab import drive # google 코랩 계정 mount
    drive.mount('/content/drive')
    import os
    os.chdir('/content/drive/MyDrive/Colab_Notebooks/capstone/AIM') # 자신의 환경에 맞는 경로 설정

import warnings
warnings.simplefilter('ignore')

import socket
print(socket.gethostname())
hostname = socket.gethostname()


"""### 라이브러리 설정"""

# Commented out IPython magic to ensure Python compatibility.
#파이썬 기본 제공 함수
import cv2
import matplotlib.image as image
import matplotlib.pyplot as plt
import numpy as np
import json
# %matplotlib inline
import matplotlib.pyplot as plt
from pycocotools.coco import COCO
from pycocotools.cocoeval import COCOeval
import numpy as np
import skimage.io as io
import pylab
pylab.rcParams['figure.figsize'] = (10.0, 8.0)

"""### 단일 사진으로부터 추출한 Keypoint 그리기"""

# img_dir_path = './image/supine/'
# json_dir_path = './json_output/'

# img_dir_path = './image/situp/'
# json_dir_path = './json_output/'

# img_dir_path = './image/foul1_shoulder/'
# json_dir_path = './json_output/'

# img_dir_path = './image/foul2_hip/'
# json_dir_path = './json_output/'

# img_dir_path = './image/foul3_arm/'
# json_dir_path = './json_output/'

# img_dir_path = './image/foul4_hold/'
# json_dir_path = './json_output/'

# img_dir_path = './image/foul5_hand/'
# json_dir_path = './json_output/'

img_dir_path = './image/foul6_thigh/'
json_dir_path = './json_output/'

!pip install ffmpeg-python

for i in range(100):
  image_file = i
  img_file_name = '{}.jpg'.format(image_file) #jpeg/ jpg
  output_file_name = json_dir_path + 'output_{}.json'.format(image_file)

  orign_img = cv2.imread( img_dir_path + img_file_name)
  orign_img = cv2.cvtColor(orign_img, cv2.COLOR_RGB2BGR)

  ! python3 scripts/extract-keypoints.py \
  --filename /content/drive/MyDrive/Colab_Notebooks/capstone/AIM/image/foul6_thigh/{img_file_name} \      #경로 맞게 바꿔주기
  --format json \
  --hrnet_weights weights/pose_hrnet_w48_384x288.pth \
  --json_output_filename {output_file_name}
  # load infrence json data
  infer_bbox_list = []
  infer_keypoint_list = []
  infer_json_file_name = output_file_name
  print("loading file : {}\n".format(infer_json_file_name))
  # with open(infer_json_dir_path + infer_json_file_name) as f:
  with open(infer_json_file_name) as f:
    infer_json = json.load(f)

    infer_bbox_list = infer_json['0'][0]
    infer_keypoint_list = infer_json['0'][1]
    color_list =[
        (255, 0, 255),
        (0, 255, 255),

        (255, 0, 255),
        (0, 255, 255),
        
        (36, 25, 193),

        (16, 189, 137),
        (16, 189, 137),
        
        (9, 9, 235) ,
        
        (207, 142, 235),
        (207, 142, 235), 
                      
        (162, 255, 0), 
        (162, 255, 0),
        
        (255,0, 255), 
        
        (255, 0, 0), 
        (255, 0, 0), 
        
        (255, 145, 0),
        (255, 145, 0), 
    ]
    skeleton_conntect_info = [
        [16, 14], [14, 12],
        [17, 15], [15, 13],

        [12, 13],
        
        [6, 12], [7, 13],
        
        [6, 7],
        
        [6, 8], [7, 9],
        [8, 10], [9, 11],

        [2, 3], [1, 2], [1, 3],

        [2, 4], [3, 5]
        ]
    gt_keypoint_list = []

    thickness=3

    infer_keypoint_img = orign_img.copy()

    person_count = 0 
    for person in infer_keypoint_list:
        person_count+=1

        skeleton_conn_info = skeleton_conntect_info
        
        for dot in person:
            cv2.drawMarker(infer_keypoint_img, 
                          (int(dot[1]),int(dot[0])), (255, 255, 255), markerType=cv2.MARKER_STAR, 
                            markerSize=2, thickness=5, line_type=cv2.LINE_AA)
        conn_index = -1
        for conn in skeleton_conn_info:
            conn_index+=1
            start_point = (conn[0])-1
            end_point = (conn[1])-1
            
            cv2.line(infer_keypoint_img, 
                    (int(person[start_point][1]), int(person[start_point][0])), 
                    (int(person[end_point][1]), int(person[end_point][0])),
                    color_list[conn_index], thickness)


    fig = plt.figure(figsize=(10,10))
    ax = fig.add_subplot(111)
    ax.set_title("inference keypoints")
    ax.imshow(infer_keypoint_img)   

    infer_bbox_img = orign_img.copy()
    infer_keypoint_bbox_img = infer_keypoint_img.copy()

    for bbox in infer_bbox_list :
        bbox_img = cv2.rectangle(infer_bbox_img, ( int(bbox[0]), int(bbox[1]) ),
                              ( int(bbox[2]), int(bbox[3]) ), (0,255,0), 3)
        
        keypoint_bbox_img = cv2.rectangle(infer_keypoint_bbox_img, ( int(bbox[0]), int(bbox[1]) ),
                              ( int(bbox[2]), int(bbox[3]) ), (0,255,0), 3)       
    fig3 = plt.figure(figsize=(10,10))
    ax3 = fig3.add_subplot(111)
    ax3.set_title("Keypoint + Bounding Box Image")
    ax3.imshow(infer_keypoint_bbox_img)
    img_output_dir_path = './outputs/foul6_thigh/'  #폴더 경로 바꿔주기
    img_name = img_file_name.split('.')[0]
    img_output_dir_path = img_output_dir_path + img_name +'/'
    !mkdir {img_output_dir_path}
    output_prefix = 'output_skeleton_'+ img_name
    infer_keypoint_bbox_img_brg = cv2.cvtColor(infer_keypoint_bbox_img, cv2.COLOR_BGR2RGB)
    file_name = img_output_dir_path + output_prefix + "_keypoint_bbox.jpg"
    result = cv2.imwrite( file_name, infer_keypoint_bbox_img_brg)    
    print('{} // Image : {}'.format(result, file_name))
